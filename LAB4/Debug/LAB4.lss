
LAB4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000104  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000158  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000158  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000188  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005e7  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000054a  00000000  00000000  000007d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000029b  00000000  00000000  00000d1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00000fb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002d7  00000000  00000000  00000fec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000a5  00000000  00000000  000012c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001368  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 76 00 	call	0xec	; 0xec <main>
  64:	0c 94 80 00 	jmp	0x100	; 0x100 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <klawiatura>:
}

void klawiatura() {
	// volatile uint8_t zmienna;
	uint8_t problem = 0;
	for (uint8_t i = 4; i<8; i++) {
  6c:	24 e0       	ldi	r18, 0x04	; 4
    }
}

void klawiatura() {
	// volatile uint8_t zmienna;
	uint8_t problem = 0;
  6e:	30 e0       	ldi	r19, 0x00	; 0
	for (uint8_t i = 4; i<8; i++) {
  70:	36 c0       	rjmp	.+108    	; 0xde <klawiatura+0x72>
		PORTA = ~(1<<i);
  72:	81 e0       	ldi	r24, 0x01	; 1
  74:	90 e0       	ldi	r25, 0x00	; 0
  76:	02 2e       	mov	r0, r18
  78:	02 c0       	rjmp	.+4      	; 0x7e <klawiatura+0x12>
  7a:	88 0f       	add	r24, r24
  7c:	99 1f       	adc	r25, r25
  7e:	0a 94       	dec	r0
  80:	e2 f7       	brpl	.-8      	; 0x7a <klawiatura+0xe>
  82:	80 95       	com	r24
  84:	8b bb       	out	0x1b, r24	; 27
		uint8_t kolumna = i-4;
		uint8_t k = PINA;
  86:	89 b3       	in	r24, 0x19	; 25
		if(k == 0xFF ) {
  88:	8f 3f       	cpi	r24, 0xFF	; 255
  8a:	11 f4       	brne	.+4      	; 0x90 <klawiatura+0x24>
			PORTB = 255;
  8c:	88 bb       	out	0x18, r24	; 24
			break;
  8e:	29 c0       	rjmp	.+82     	; 0xe2 <klawiatura+0x76>
		}
		uint8_t x = PINA&0x0F;
  90:	89 b3       	in	r24, 0x19	; 25
  92:	8f 70       	andi	r24, 0x0F	; 15
		switch(x) {
  94:	8d 30       	cpi	r24, 0x0D	; 13
  96:	89 f0       	breq	.+34     	; 0xba <klawiatura+0x4e>
  98:	28 f4       	brcc	.+10     	; 0xa4 <klawiatura+0x38>
  9a:	87 30       	cpi	r24, 0x07	; 7
  9c:	c1 f0       	breq	.+48     	; 0xce <klawiatura+0x62>
  9e:	8b 30       	cpi	r24, 0x0B	; 11
  a0:	89 f0       	breq	.+34     	; 0xc4 <klawiatura+0x58>
  a2:	1a c0       	rjmp	.+52     	; 0xd8 <klawiatura+0x6c>
  a4:	8e 30       	cpi	r24, 0x0E	; 14
  a6:	21 f0       	breq	.+8      	; 0xb0 <klawiatura+0x44>
  a8:	8f 30       	cpi	r24, 0x0F	; 15
  aa:	b1 f4       	brne	.+44     	; 0xd8 <klawiatura+0x6c>
			case 0b00001111:
				PORTB = 0;
  ac:	18 ba       	out	0x18, r1	; 24
			break;
  ae:	16 c0       	rjmp	.+44     	; 0xdc <klawiatura+0x70>
			case 0b00001110:
				problem ++;
  b0:	3f 5f       	subi	r19, 0xFF	; 255
				PORTB = 1 + kolumna;
  b2:	8d ef       	ldi	r24, 0xFD	; 253
  b4:	82 0f       	add	r24, r18
  b6:	88 bb       	out	0x18, r24	; 24
			break;
  b8:	11 c0       	rjmp	.+34     	; 0xdc <klawiatura+0x70>
			case 0b00001101:
				problem ++;
  ba:	3f 5f       	subi	r19, 0xFF	; 255
				PORTB = 5 + kolumna;
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	82 0f       	add	r24, r18
  c0:	88 bb       	out	0x18, r24	; 24
			break;
  c2:	0c c0       	rjmp	.+24     	; 0xdc <klawiatura+0x70>
			case 0b00001011:
				problem ++;
  c4:	3f 5f       	subi	r19, 0xFF	; 255
				PORTB = 9 + kolumna;
  c6:	85 e0       	ldi	r24, 0x05	; 5
  c8:	82 0f       	add	r24, r18
  ca:	88 bb       	out	0x18, r24	; 24
			break;
  cc:	07 c0       	rjmp	.+14     	; 0xdc <klawiatura+0x70>
			case 0b00000111:
				problem ++; 
  ce:	3f 5f       	subi	r19, 0xFF	; 255
				PORTB = 13 + kolumna;
  d0:	89 e0       	ldi	r24, 0x09	; 9
  d2:	82 0f       	add	r24, r18
  d4:	88 bb       	out	0x18, r24	; 24
			break;
  d6:	02 c0       	rjmp	.+4      	; 0xdc <klawiatura+0x70>
			default:
				PORTB = 255;
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	88 bb       	out	0x18, r24	; 24
}

void klawiatura() {
	// volatile uint8_t zmienna;
	uint8_t problem = 0;
	for (uint8_t i = 4; i<8; i++) {
  dc:	2f 5f       	subi	r18, 0xFF	; 255
  de:	28 30       	cpi	r18, 0x08	; 8
  e0:	40 f2       	brcs	.-112    	; 0x72 <klawiatura+0x6>
			default:
				PORTB = 255;
			break;
		}
	}
	if(problem > 1) {
  e2:	32 30       	cpi	r19, 0x02	; 2
  e4:	10 f0       	brcs	.+4      	; 0xea <klawiatura+0x7e>
		PORTB = 255;
  e6:	8f ef       	ldi	r24, 0xFF	; 255
  e8:	88 bb       	out	0x18, r24	; 24
  ea:	08 95       	ret

000000ec <main>:

//uint8_t getKey();

int main(void)
{
    DDRA = 0xF0;
  ec:	80 ef       	ldi	r24, 0xF0	; 240
  ee:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0x0F;
  f0:	8f e0       	ldi	r24, 0x0F	; 15
  f2:	8b bb       	out	0x1b, r24	; 27
	
	DDRB = 0xFF;
  f4:	8f ef       	ldi	r24, 0xFF	; 255
  f6:	87 bb       	out	0x17, r24	; 23
	PORTB = 0x00;
  f8:	18 ba       	out	0x18, r1	; 24
	
	
    while (1) {
		
		klawiatura();
  fa:	0e 94 36 00 	call	0x6c	; 0x6c <klawiatura>
  fe:	fd cf       	rjmp	.-6      	; 0xfa <main+0xe>

00000100 <_exit>:
 100:	f8 94       	cli

00000102 <__stop_program>:
 102:	ff cf       	rjmp	.-2      	; 0x102 <__stop_program>
